==========================
 NixOS 66: NixOS vs Ubuntu
==========================

- Companion to video at 

- This text script available via link in the video description.

- See the other videos in this series by visiting the playlist at
  https://www.youtube.com/playlist?list=PLa01scHy0YEmg8trm421aYq4OtPD8u1SN

Overview
========

- Installation

Head to Head
============

- Switching desktop environments (KDE plasma -> gnome)

- Playing games (steam)

- Installing software (git, Visual Studio Code)

- Adding a user account (ssh key)

- Configuring aliases (home-manager)

- Configuring an ssh server (common)

- Configuring logind for sessile

- Commercial software (Mixbus, MS SQL Server)

- Data science development environments outside of any IDE (pandas)

- Using older software (show Nix package versions website and alternate nixpkgs
  repos)

- Configuring hardware (nixos-hardware)

- Managing multiple machines

- Rolling back to an earlier configuration

NixOS configuration is captured and managed in a set of text files; Ubuntu
configuration is not captured in any replayable sense, and management is
imperative.

Note that the environment generated by NixOS is largely manageable *only* via
the configuration file set.  For example, if you want to change your OpenSSH
server settings, you won't be editing anything in ``/etc/ssh``, you will be
editing your NixOS configuration files and rebuilding.

Which you choose is down to whether you prefer imperative configuration to
declarative configuration.  Ubuntu is all imperative (at least without
something like Ansible), NixOS is all declarative.

Ubuntu is much better if you have no Linux experience, if only because it is
one of the most popular Linux distributions and googleability for solutions to
problems is very good. 

