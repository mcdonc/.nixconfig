{ config, pkgs, lib, nixos-hardware, ... }: {
  imports =
    [ "${nixos-hardware}/common/cpu/intel" ../encryptedzfs.nix ../common.nix ];

  fileSystems."/nix" = {
    device = "NIXROOT/home";
    fsType = "nix";
  };
  
  system.stateVersion = "23.11";

  networking.hostId = "0a2c6440";
  networking.hostName = "optinix";

}

# # Do not modify this file!  It was generated by ‘nixos-generate-config’
# # and may be overwritten by future invocations.  Please make changes
# # to /etc/nixos/configuration.nix instead.
# { config, lib, pkgs, modulesPath, ... }:

# {
#   imports =
#     [ (modulesPath + "/installer/scan/not-detected.nix")
#     ];

#   boot.initrd.availableKernelModules = [ "xhci_pci" "ahci" "nvme" "usb_storage" "usbhid" "sd_mod" ];
#   boot.initrd.kernelModules = [ ];
#   boot.kernelModules = [ "kvm-intel" ];
#   boot.extraModulePackages = [ ];

#   fileSystems."/" =
#     { device = "NIXROOT/root";
#       fsType = "zfs";
#     };

#   fileSystems."/boot" =
#     { device = "/dev/disk/by-uuid/D298-8671";
#       fsType = "vfat";
#     };

#   fileSystems."/home" =
#     { device = "NIXROOT/home";
#       fsType = "zfs";
#     };

#   fileSystems."/nix" =
#     { device = "NIXROOT/nix";
#       fsType = "zfs";
#     };

#   swapDevices = [ ];

#   # Enables DHCP on each ethernet and wireless interface. In case of scripted networking
#   # (the default) this is the recommended approach. When using systemd-networkd it's
#   # still possible to use this option, but it's recommended to use it in conjunction
#   # with explicit per-interface declarations with `networking.interfaces.<interface>.useDHCP`.
#   networking.useDHCP = lib.mkDefault true;
#   # networking.interfaces.enp1s0.useDHCP = lib.mkDefault true;
#   # networking.interfaces.wlo1.useDHCP = lib.mkDefault true;

#   nixpkgs.hostPlatform = lib.mkDefault "x86_64-linux";
#   hardware.cpu.intel.updateMicrocode = lib.mkDefault config.hardware.enableRedistributableFirmware;
}
